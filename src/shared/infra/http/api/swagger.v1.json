{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0",
    "title": "Favorite Products API",
    "description": "This project is based on the management of each customer's favorite products for generating marketing reports."
  },
  "servers":[
    { "url" : "http://localhost:3000"}
  ],
  "tags": [
    { "name": "Session", "description": "Features to handle the session." },
    { "name": "Client", "description": "Features to handle the client data." }
  ],
  "schemes": ["http"],
  "paths": {
    "/api/v1/session/token": {
      "get": {
        "tags": ["Session"],
        "summary": "Get a JWT token to access for one hour the other routes.",
        "description": "",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Successful operation.",
            "content":{
              "application/json":{
                "schema": {
                  "$ref": "#/components/schemas/TokenSuccess"
                },
                "example":{
                  "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9"
                }
              }
            }
          },
          "400": {
            "description": "Invalid body request.",
            "content":{
              "application/json":{
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example":{
                  "message": "Invalid body request."
                }
              }
            }
          },
          "401": {
            "description": "Access code does not valid.",
            "content":{
              "application/json":{
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example":{
                  "message": "Access code does not valid."
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/client": {
      "get": {
        "tags": ["Client"],
        "summary": "Get a message to test the route.",
        "description": "",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Successful operation.",
            "schema": {
              "$ref": "#/components/schemas/Success"
            }
          },
          "404": {
            "description": "Destination not found.",
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "401": {
            "description": "JWT token is missing. | Invalid JWT token.",
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      }
    },
    "/api/v1/client/token": {
      "get": {
        "security": [
          {"JWTAuth": []}
        ],
        "tags": ["Client"],
        "summary": "Get a token message to test the route.",
        "description": "",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Successful operation.",
            "schema": {
              "$ref": "#/components/schemas/Success"
            }
          },
          "401": {
            "description": "JWT token is missing. | Invalid JWT token.",
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "404": {
            "description": "Destination not found.",
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      }
    }
  },
  "components":{
    "securitySchemes":{
      "JWTAuth":{
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT" ,
        "description": "Enter **_only_**  the JWT token obtained in the session route."
      }
    },
    "schemas":{
      "Success": {
        "type": "object",
        "properties": {
          "message": { "type": "string" }
        }
      },
      "TokenSuccess": {
        "type": "object",
        "properties": {
          "token": { "type": "string" }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "message": { "type": "string" }
        }
      }
    }
  }
}
